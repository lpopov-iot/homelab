apiVersion: v1
kind: Service
metadata:
  name: external-service-pihole-webadmin # Keep the existing name
  namespace: ingress-nginx
spec:
  clusterIP: None
  ports:
  - name: webadmin
    port: 8489
    targetPort: 8489
    protocol: TCP
  - name: metrics
    port: 9100
    targetPort: 9100
    protocol: TCP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: external-service-pihole-webadmin # Must match the Service name
  namespace: ingress-nginx
subsets:
  - addresses:
      - ip: 192.168.0.2
    ports:
      - name: webadmin # Match the name from the Service
        port: 8489
      - name: metrics # Match the name from the Service
        port: 9100

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: ingress-nginx
  annotations:
    # Tell Nginx Ingress to use HTTPS when connecting to the backend service (Pi-hole at 192.168.0.2:8489)
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

    # --- Previous annotations (if still desired) ---
    # Redirects / to /admin/ internally at the Ingress Controller level
    nginx.ingress.kubernetes.io/app-root: /admin/

    # (Optional) Forces browser from HTTP to HTTPS for the frontend
    # This requires TLS configuration (secretName and hosts) in the Ingress spec
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

spec:
  ingressClassName: nginx
  # If you want frontend HTTPS (browser to Ingress), you need this TLS block:
  # tls:
  #   - hosts:
  #       - pihole.home.oakhl.com
  #     secretName: your-pihole-tls-secret # Replace with your TLS secret (e.g., from cert-manager)
  rules:
  - host: pihole.home.oakhl.com
    http:
      paths:
      - path: /
        pathType: Prefix # Or ImplementationSpecific
        backend:
          service:
            name: external-service-pihole-webadmin
            port:
              name: webadmin # This is the port Nginx will connect to, now using HTTPS protocol